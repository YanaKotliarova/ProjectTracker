<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountSettingsLabel" xml:space="preserve">
    <value>Account Settings</value>
  </data>
  <data name="ActionIrreversible" xml:space="preserve">
    <value>This action is irreversible</value>
  </data>
  <data name="AddButton" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddItemLabel" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="AddLabelLabel" xml:space="preserve">
    <value>Add label</value>
  </data>
  <data name="AddNewItemLabel" xml:space="preserve">
    <value>Add New Item</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="BackButton" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ChooseProjectFirstPopup" xml:space="preserve">
    <value>Choose project first!</value>
  </data>
  <data name="CommentLabel" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ConfirmAccountDelete" xml:space="preserve">
    <value>Are you sure you want to DELETE your account?</value>
  </data>
  <data name="ConfirmInfoChanges" xml:space="preserve">
    <value>Are you sure you want to update your information?</value>
  </data>
  <data name="ConfirmIssueChanges" xml:space="preserve">
    <value>Are you sure you want to update your issue?</value>
  </data>
  <data name="ConfirmIssueDelete" xml:space="preserve">
    <value>Are you sure you want to DELETE your issue?</value>
  </data>
  <data name="ConfirmLogOut" xml:space="preserve">
    <value>Are you sure you want to log out?</value>
  </data>
  <data name="ConfirmPasswordChanges" xml:space="preserve">
    <value>Are you sure you want to update your password?</value>
  </data>
  <data name="ConfirmProjectChanges" xml:space="preserve">
    <value>Are you sure you want to update your project?</value>
  </data>
  <data name="ConfirmProjectDelete" xml:space="preserve">
    <value>Are you sure you want to DELETE your project?</value>
  </data>
  <data name="ConnectionCompletedSuccessfully" xml:space="preserve">
    <value>Connection completed successfully</value>
  </data>
  <data name="ConnectionCompletedUnsuccessfully" xml:space="preserve">
    <value>Connection completed unsuccessfully. Try again</value>
  </data>
  <data name="ConnectionStringExeption" xml:space="preserve">
    <value>It is impossible to connect to the database. Check the connection string.</value>
  </data>
  <data name="CreateButton" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreatedItemNamePopup" xml:space="preserve">
    <value>Created item must have a name!</value>
  </data>
  <data name="DangerZoneLabel" xml:space="preserve">
    <value>Danger Zone</value>
  </data>
  <data name="DeleteAccountLabel" xml:space="preserve">
    <value>Delete your account</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionOptionalLabel" xml:space="preserve">
    <value>Description (optional)</value>
  </data>
  <data name="DoneStatus" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="EnterButton" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="EnterNewString" xml:space="preserve">
    <value>Enter new connection string:</value>
  </data>
  <data name="Failure" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="GoodDay" xml:space="preserve">
    <value>and hope you have a good day!</value>
  </data>
  <data name="HighPriority" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="HomeLabel" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InProgressStatus" xml:space="preserve">
    <value>In Progress</value>
  </data>
  <data name="InvalidConnectionString" xml:space="preserve">
    <value>Invalid database connection string</value>
  </data>
  <data name="IssueLabel" xml:space="preserve">
    <value>Issue</value>
  </data>
  <data name="IssueNameOccupiedPopup" xml:space="preserve">
    <value>An issue with that name already exists in selected project!</value>
  </data>
  <data name="IssuesLabel" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="IssueUpdated" xml:space="preserve">
    <value>Your issue has been updated</value>
  </data>
  <data name="LabelsLabel" xml:space="preserve">
    <value>Labels</value>
  </data>
  <data name="LetGetStarted" xml:space="preserve">
    <value>Let's get started</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LogInButton" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginLabel" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginOccupiedPopup" xml:space="preserve">
    <value>This login is already occupied. Try another one</value>
  </data>
  <data name="LogOutButton" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="LogOutLabel" xml:space="preserve">
    <value>Log out of your account</value>
  </data>
  <data name="LowPriority" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="MediumPriority" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="NameOfItemLabel" xml:space="preserve">
    <value>Name of item</value>
  </data>
  <data name="NewPasswordLabel" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NoCommentProvided" xml:space="preserve">
    <value>No comment provided</value>
  </data>
  <data name="NoDescriptionProvided" xml:space="preserve">
    <value>No description provided</value>
  </data>
  <data name="NotChangedIssuePopup" xml:space="preserve">
    <value>You haven't changed the issue!</value>
  </data>
  <data name="NotChangedPersonalInfoPopup" xml:space="preserve">
    <value>You have not changed your personal information!</value>
  </data>
  <data name="NotChangedProjectPopup" xml:space="preserve">
    <value>You haven't changed the project!</value>
  </data>
  <data name="PasswordIsTooShortPopup" xml:space="preserve">
    <value>Your password is too short. It should be more than 8 symbols</value>
  </data>
  <data name="PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordNotEqualPopup" xml:space="preserve">
    <value>Passwords you entered are not equal! Try again</value>
  </data>
  <data name="PasswordUpdated" xml:space="preserve">
    <value>Your password has been updated</value>
  </data>
  <data name="PersonalInformationLabel" xml:space="preserve">
    <value>Personal Information</value>
  </data>
  <data name="PersonalInfoUpdated" xml:space="preserve">
    <value>Your personal information has been updated</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait</value>
  </data>
  <data name="PriorityLabel" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="ProjectLabel" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectNameOccupiedPopup" xml:space="preserve">
    <value>A project with that name already exists!</value>
  </data>
  <data name="ProjectsLabel" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="ProjectUpdated" xml:space="preserve">
    <value>Your project has been updated</value>
  </data>
  <data name="ReconnectionToDatabase" xml:space="preserve">
    <value>Reconnection to database...</value>
  </data>
  <data name="RegistrationHyperlink" xml:space="preserve">
    <value>Don't have an account? Create it!</value>
  </data>
  <data name="RepeatNewPasswordLabel" xml:space="preserve">
    <value>Repeat new password</value>
  </data>
  <data name="ReviewStatus" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="RoleLabel" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectProjectLabel" xml:space="preserve">
    <value>Select project</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignupButton" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="StatusLabel" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="TodayIs" xml:space="preserve">
    <value>Today is</value>
  </data>
  <data name="ToDoStatus" xml:space="preserve">
    <value>To Do</value>
  </data>
  <data name="TypeOfItemLabel" xml:space="preserve">
    <value>Type of item</value>
  </data>
  <data name="UpdateButton" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="WelcomeTo" xml:space="preserve">
    <value>Welcome to</value>
  </data>
  <data name="WrongLoginOrPassword" xml:space="preserve">
    <value>Wrong login or password! Try again</value>
  </data>
</root>